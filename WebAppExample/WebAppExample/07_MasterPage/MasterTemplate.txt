[1] ASP.NET 템플릿
	마스터 페이지(Master), 웹 사용자 정의 컨트롤(ASXC), 스킨 파일(Skin)

	1) ASP.NET 사용 폴더
	프로젝트 오른쪽 버튼 클릭 > 추가 > ASP.NET 폴더 추가

	App_Code : 웹 사이트에서 사용할 클래스 파일이 저장된다.
				프로젝트가 아닌 웹 사이트 형식으로 생성된 프로젝트에서 사용
	App_GlobalResources : 웹 사이트 전체에서 사용되는 리소스 파일 저장
	App_LocalResources : 웹 페이지 각각에서 사용되는 리소스 파일 저장
	App_Data : 데이터베이스 및 XML 같은 데이터 파일 저장
	App_Browsers : 각 브라우저와 관련된 정보를 저장한다 (현재는 사용하지 않음)
	테마(Themas) : ASP.NET 서버 컨트롤에 대한 스타일을 정의하는 파일이 저장된다. 

[2] ASP.NET 웹 폼 사용자 정의 컨트롤
	웹 페이지에서 반복 사용되는 부분을 따로 파일을 구성해 사이트를 제작할 때 코드의 중복을 줄이고 효율성을 높여준다.
	ASCX 파일을 사용하여 웹 사용자 정의 컨트롤 페이지를 만든다.

	웹 폼이 한 페이지 전체를 가리킨다면 웹 사용자 정의 컨트롤은 웹 폼에 올라갈 부분 페이지를 나타낸다
	웹 사용자 정의 컨트롤은 단독으로 실행되지 않으며 반드시 웹 폼에서 실행되어야 한다.

[3] ASP.NET 템플릿 페이지
	ASP.NET 템플릿 페이지란 각각의 웹 폼에서 매번 공통적으로 들어가는 네비게이터, 카테고리, 카탈로그, 카파라이트 등의 정보를 한 번만 작성하고
	각 페이지에 손쉽게 적용할 수 있는 방식이다.
	ASP(ASP3.0) 시절의 SSI(Server Side Include) 기능이 ASP.NET에서는 웹 사용자 정의 컨트롤로(ASCX) 대체 되었다.

[4] 마스터 페이지
	마스터 페이지는 사용자 정의 컨트롤을 사용한 템플릿 페이지와 같이 웹 페이지 전체에 공통적으로 사용되는 뼈대를 구성할 때 사용하는 기능이다.
	ASP.NET MVC에서는 레이아웃으로 마스터 페이지 기능을 구현한다.

	최근 웹 사이트는 레이아웃을 똑같이 유지해 일관된 룩앤필을 제공한다.
	마스터 페이지는 반복적으로 사용되는 UI에 대한 템플릿을 제공하는 형태이다.
	반복되는 HTML 작업을 피하고, 한 번 만들면 여러번 재 사용할 수 있는 레이아웃을 구성할 수 있다.

	ASP.NET 이전 버전인 ASP에서는 Include란 개념으로 공통 페이지를 구현했찌만
	ASP.NET 2.0 이상 부터는 웹 폼 사용자 컨트롤과 마스터 페이지를 제공하여 더 쉽고 빠르게 공통 레이아웃 페이지를 구현할 수 있다.

